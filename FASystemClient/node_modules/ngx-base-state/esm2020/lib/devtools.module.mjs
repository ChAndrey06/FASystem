import { Inject, NgModule } from '@angular/core';
import { ReplaySubject } from 'rxjs';
import { ɵMetadataKeyEnum } from './enums';
import { NGX_BASE_STATE_DEVTOOLS_CONFIG } from './tokens';
import * as i0 from "@angular/core";
import * as i1 from "./helpers";
import * as i2 from "./classes";
export class NgxBaseStateDevtoolsModule {
    constructor(config, metadataStorage) {
        this.config = config;
        this.metadataStorage = metadataStorage;
        if (this.config.isEnabled) {
            this.metadataStorage.set(ɵMetadataKeyEnum.DevtoolsEnabled, true);
            this.metadataStorage.set(ɵMetadataKeyEnum.MetadataOperation, new ReplaySubject());
        }
    }
}
NgxBaseStateDevtoolsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.4", ngImport: i0, type: NgxBaseStateDevtoolsModule, deps: [{ token: NGX_BASE_STATE_DEVTOOLS_CONFIG }, { token: i1.ɵMetadataStorage }], target: i0.ɵɵFactoryTarget.NgModule });
NgxBaseStateDevtoolsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.4", ngImport: i0, type: NgxBaseStateDevtoolsModule });
NgxBaseStateDevtoolsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.4", ngImport: i0, type: NgxBaseStateDevtoolsModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.4", ngImport: i0, type: NgxBaseStateDevtoolsModule, decorators: [{
            type: NgModule,
            args: [{}]
        }], ctorParameters: function () { return [{ type: i2.NgxBaseStateDevtoolsConfig, decorators: [{
                    type: Inject,
                    args: [NGX_BASE_STATE_DEVTOOLS_CONFIG]
                }] }, { type: i1.ɵMetadataStorage }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2dG9vbHMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbGlicmFyeS9zcmMvbGliL2RldnRvb2xzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRXJDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUczQyxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxVQUFVLENBQUM7Ozs7QUFHMUQsTUFBTSxPQUFPLDBCQUEwQjtJQUNuQyxZQUM2RCxNQUFrQyxFQUMxRSxlQUFpQztRQURPLFdBQU0sR0FBTixNQUFNLENBQTRCO1FBQzFFLG9CQUFlLEdBQWYsZUFBZSxDQUFrQjtRQUVsRCxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNqRSxJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FDcEIsZ0JBQWdCLENBQUMsaUJBQWlCLEVBQ2xDLElBQUksYUFBYSxFQUFzQixDQUMxQyxDQUFDO1NBQ0w7SUFDTCxDQUFDOzt1SEFaUSwwQkFBMEIsa0JBRXZCLDhCQUE4Qjt3SEFGakMsMEJBQTBCO3dIQUExQiwwQkFBMEI7MkZBQTFCLDBCQUEwQjtrQkFEdEMsUUFBUTttQkFBQyxFQUFFOzswQkFHSCxNQUFNOzJCQUFDLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJlcGxheVN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE5neEJhc2VTdGF0ZURldnRvb2xzQ29uZmlnIH0gZnJvbSAnLi9jbGFzc2VzJztcbmltcG9ydCB7IMm1TWV0YWRhdGFLZXlFbnVtIH0gZnJvbSAnLi9lbnVtcyc7XG5pbXBvcnQgeyDJtU1ldGFkYXRhU3RvcmFnZSB9IGZyb20gJy4vaGVscGVycyc7XG5pbXBvcnQgeyDJtU1ldGFkYXRhT3BlcmF0aW9uIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IE5HWF9CQVNFX1NUQVRFX0RFVlRPT0xTX0NPTkZJRyB9IGZyb20gJy4vdG9rZW5zJztcblxuQE5nTW9kdWxlKHt9KVxuZXhwb3J0IGNsYXNzIE5neEJhc2VTdGF0ZURldnRvb2xzTW9kdWxlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChOR1hfQkFTRV9TVEFURV9ERVZUT09MU19DT05GSUcpIHByaXZhdGUgcmVhZG9ubHkgY29uZmlnOiBOZ3hCYXNlU3RhdGVEZXZ0b29sc0NvbmZpZyxcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBtZXRhZGF0YVN0b3JhZ2U6IMm1TWV0YWRhdGFTdG9yYWdlXG4gICAgKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbmZpZy5pc0VuYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMubWV0YWRhdGFTdG9yYWdlLnNldCjJtU1ldGFkYXRhS2V5RW51bS5EZXZ0b29sc0VuYWJsZWQsIHRydWUpO1xuICAgICAgICAgICAgdGhpcy5tZXRhZGF0YVN0b3JhZ2Uuc2V0KFxuICAgICAgICAgICAgICAgIMm1TWV0YWRhdGFLZXlFbnVtLk1ldGFkYXRhT3BlcmF0aW9uLFxuICAgICAgICAgICAgICAgIG5ldyBSZXBsYXlTdWJqZWN0PMm1TWV0YWRhdGFPcGVyYXRpb24+KClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=