{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { takeUntil } from 'rxjs';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DestroyService } from '@core/services';\nimport { Loadable } from '@core/helpers';\nimport { TransactionTypesEnum } from '@features/transactions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@features/transactions\";\nimport * as i3 from \"@features/accounts\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/autocomplete\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"rxjs\";\nfunction TransactionDetailsComponent_ng_container_0_mat_form_field_4_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r8.name, \" \");\n  }\n}\nfunction TransactionDetailsComponent_ng_container_0_mat_form_field_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 3)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 16);\n    i0.ɵɵtemplate(4, TransactionDetailsComponent_ng_container_0_mat_form_field_4_mat_option_4_Template, 2, 2, \"mat-option\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.transactionTypes);\n  }\n}\nfunction TransactionDetailsComponent_ng_container_0_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const account_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", account_r9.name, \" \");\n  }\n}\nfunction TransactionDetailsComponent_ng_container_0_mat_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r10.name, \" \");\n  }\n}\nfunction TransactionDetailsComponent_ng_container_0_mat_option_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransactionDetailsComponent_ng_container_0_ng_container_30_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bike_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", bike_r12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", bike_r12.name, \" \", bike_r12.number, \" \");\n  }\n}\nfunction TransactionDetailsComponent_ng_container_0_ng_container_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TransactionDetailsComponent_ng_container_0_ng_container_30_mat_option_1_Template, 2, 3, \"mat-option\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.bikes.data);\n  }\n}\nfunction TransactionDetailsComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function TransactionDetailsComponent_ng_container_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onSubmit(ctx_r13.formGroup.value));\n    });\n    i0.ɵɵtemplate(4, TransactionDetailsComponent_ng_container_0_mat_form_field_4_Template, 5, 1, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(5, \"mat-form-field\", 3)(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Amount\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-form-field\", 3)(10, \"mat-label\");\n    i0.ɵɵtext(11, \"Account\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-select\", 5);\n    i0.ɵɵtemplate(13, TransactionDetailsComponent_ng_container_0_mat_option_13_Template, 2, 2, \"mat-option\", 6);\n    i0.ɵɵpipe(14, \"async\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"mat-form-field\", 3)(16, \"mat-label\");\n    i0.ɵɵtext(17, \"Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"mat-select\", 7);\n    i0.ɵɵtemplate(19, TransactionDetailsComponent_ng_container_0_mat_option_19_Template, 2, 2, \"mat-option\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"mat-form-field\", 3)(21, \"mat-label\");\n    i0.ɵɵtext(22, \"Bike name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"input\", 8);\n    i0.ɵɵelementStart(24, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TransactionDetailsComponent_ng_container_0_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onClearBikeNameClicked());\n    });\n    i0.ɵɵelementStart(25, \"mat-icon\");\n    i0.ɵɵtext(26, \"close\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"mat-autocomplete\", 10, 11);\n    i0.ɵɵlistener(\"optionSelected\", function TransactionDetailsComponent_ng_container_0_Template_mat_autocomplete_optionSelected_27_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onBikeSelected($event));\n    });\n    i0.ɵɵtemplate(29, TransactionDetailsComponent_ng_container_0_mat_option_29_Template, 2, 0, \"mat-option\", 0);\n    i0.ɵɵtemplate(30, TransactionDetailsComponent_ng_container_0_ng_container_30_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"mat-form-field\", 3)(32, \"mat-label\");\n    i0.ɵɵtext(33, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"textarea\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 13)(36, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TransactionDetailsComponent_ng_container_0_Template_button_click_36_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onNewClicked());\n    });\n    i0.ɵɵtext(37, \" New \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"button\", 15);\n    i0.ɵɵtext(39, \" Save \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TransactionDetailsComponent_ng_container_0_Template_button_click_40_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.onViewAllClicked());\n    });\n    i0.ɵɵtext(41, \" View all \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(28);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r0.title, \" \", ctx_r0.transaction.data ? ctx_r0.transaction.data.id : \"create\", \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formGroup);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.typeId);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 12, ctx_r0.accounts$));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.categories.data);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matAutocomplete\", _r4);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.bikes.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.bikes.isLoading);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.formGroup.dirty);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.formGroup.valid || !ctx_r0.formGroup.dirty);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.formGroup.dirty);\n  }\n}\nexport class TransactionDetailsComponent {\n  constructor(viewDestroyed$, formBuilder, transactionsService, accountsState, router, route) {\n    this.viewDestroyed$ = viewDestroyed$;\n    this.formBuilder = formBuilder;\n    this.transactionsService = transactionsService;\n    this.accountsState = accountsState;\n    this.router = router;\n    this.route = route;\n    this.typeId = null;\n    this.title = 'Transaction';\n    this.accounts$ = this.accountsState.data$;\n    this.categories = new Loadable([], false);\n    this.transaction = new Loadable(null, false);\n    this.transactionTypes = [{\n      id: TransactionTypesEnum.expense,\n      name: 'Expense'\n    }, {\n      id: TransactionTypesEnum.income,\n      name: 'Income'\n    }];\n    this.formGroup = this.formBuilder.group({\n      amount: [null, Validators.required],\n      description: [null, [Validators.required, Validators.maxLength(500)]],\n      typeId: [null, Validators.required],\n      categoryId: [null, [Validators.required]],\n      accountId: [null, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      if (isNaN(Number(id))) {\n        this.router.navigate(['./']);\n      } else {\n        this.loadTransaction(Number(id));\n      }\n    }\n    this.resetForm();\n    this.loadCategories();\n    if (!this.typeId) {\n      this.subscribeToTypeId();\n    }\n  }\n  onSubmit(form) {\n    if (this.transaction.data) {\n      this.updateTransaction(this.transaction.data.id, form);\n    } else {\n      this.createTransaction(form);\n    }\n  }\n  onNewClicked() {\n    this.resetForm();\n    this.transaction.setData(null);\n  }\n  onViewAllClicked() {\n    this.router.navigate(['..'], {\n      relativeTo: this.route\n    });\n  }\n  loadCategories() {\n    const typeId = this.typeId || this.formGroup.value.typeId;\n    this.categories.isLoading = true;\n    this.transactionsService.getCategories(typeId).pipe(takeUntil(this.viewDestroyed$)).subscribe({\n      next: data => this.categories.setData(data),\n      error: error => this.categories.setError(error)\n    });\n  }\n  loadTransaction(id) {\n    this.transaction.isLoading = true;\n    this.transactionsService.getById(id).pipe(takeUntil(this.viewDestroyed$)).subscribe(t => {\n      this.transaction.setData(t);\n      this.formGroup.reset(t);\n    });\n  }\n  createTransaction(t) {\n    this.transaction.isLoading = true;\n    this.transactionsService.create(t).pipe(takeUntil(this.viewDestroyed$)).subscribe(t => {\n      this.transaction.setData(t);\n      this.formGroup.reset(t);\n    });\n  }\n  updateTransaction(id, t) {\n    this.transaction.isLoading = true;\n    this.transactionsService.updateById(id, t).pipe(takeUntil(this.viewDestroyed$)).subscribe(t => {\n      this.transaction.setData(t);\n      this.formGroup.reset(t);\n    });\n  }\n  resetForm() {\n    this.formGroup.reset({\n      typeId: this.typeId\n    });\n  }\n  subscribeToTypeId() {\n    this.formGroup.get('typeId')?.valueChanges.subscribe(() => {\n      this.formGroup.get('categoryId')?.reset();\n      this.loadCategories();\n    });\n  }\n}\nTransactionDetailsComponent.ɵfac = function TransactionDetailsComponent_Factory(t) {\n  return new (t || TransactionDetailsComponent)(i0.ɵɵdirectiveInject(DestroyService), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TransactionsService), i0.ɵɵdirectiveInject(i3.AccountsState), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nTransactionDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransactionDetailsComponent,\n  selectors: [[\"app-transaction-details\"]],\n  inputs: {\n    typeId: \"typeId\",\n    title: \"title\"\n  },\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([DestroyService]), i0.ɵɵStandaloneFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [1, \"form\", 3, \"formGroup\", \"ngSubmit\"], [\"class\", \"element\", 4, \"ngIf\"], [1, \"element\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"Amount\", \"formControlName\", \"amount\"], [\"formControlName\", \"accountId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"categoryId\"], [\"matInput\", \"\", \"placeholder\", \"Bike name\", \"formControlName\", \"bikeName\", 3, \"matAutocomplete\"], [\"type\", \"button\", \"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\"], [3, \"optionSelected\"], [\"autocomplete\", \"matAutocomplete\"], [\"matInput\", \"\", \"placeholder\", \"Description...\", \"formControlName\", \"description\"], [1, \"sbumit\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"button\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"formControlName\", \"typeId\"], [3, \"value\"]],\n  template: function TransactionDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TransactionDetailsComponent_ng_container_0_Template, 42, 14, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.transaction.isLoading);\n    }\n  },\n  dependencies: [CommonModule, i5.NgForOf, i5.NgIf, i5.AsyncPipe, FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i6.MatFormField, i6.MatLabel, i6.MatSuffix, MatSelectModule, i7.MatSelect, i8.MatOption, MatInputModule, i9.MatInput, MatButtonModule, i10.MatButton, i10.MatIconButton, MatAutocompleteModule, i11.MatAutocomplete, i11.MatAutocompleteTrigger, MatIconModule, i12.MatIcon],\n  styles: [\".form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: auto;\\n  align-items: center;\\n  max-width: 400px;\\n}\\n.form[_ngcontent-%COMP%]    > .element[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n.form[_ngcontent-%COMP%]    > .sbumit[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  gap: 10px;\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvdHJhbnNhY3Rpb25zL2NvbXBvbmVudHMvdHJhbnNhY3Rpb24tZGV0YWlscy90cmFuc2FjdGlvbi1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUFDRjtBQUNFO0VBQ0UsV0FBQTtBQUNKO0FBRUU7RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsU0FBQTtBQUFKOztBQUdBO0VBQ0UsaUJBQUE7RUFDQSxrQkFBQTtBQUFGIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW46IGF1dG87XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1heC13aWR0aDogNDAwcHg7XG5cbiAgPiAuZWxlbWVudCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICA+IC5zYnVtaXQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZ2FwOiAxMHB4O1xuICB9XG59XG5oMSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","takeUntil","MatFormFieldModule","MatSelectModule","MatInputModule","MatButtonModule","MatAutocompleteModule","MatIconModule","DestroyService","Loadable","TransactionTypesEnum","i0","TransactionDetailsComponent","constructor","viewDestroyed$","formBuilder","transactionsService","accountsState","router","route","data$","id","expense","name","income","group","amount","required","description","maxLength","typeId","categoryId","accountId","ngOnInit","snapshot","paramMap","get","isNaN","Number","navigate","loadTransaction","resetForm","loadCategories","subscribeToTypeId","onSubmit","form","transaction","data","updateTransaction","createTransaction","onNewClicked","setData","onViewAllClicked","relativeTo","formGroup","value","categories","isLoading","getCategories","pipe","subscribe","next","error","setError","getById","t","reset","create","updateById","valueChanges","selectors","inputs","title","standalone","features","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/features/transactions/components/transaction-details/transaction-details.component.ts","/home/eagold/MyFiles/FASystem/FASystemClient/src/app/features/transactions/components/transaction-details/transaction-details.component.html"],"sourcesContent":["import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\n\nimport { Observable, takeUntil, tap } from 'rxjs';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { DestroyService } from '@core/services';\nimport { AccountsState } from '@features/accounts';\nimport { Loadable } from '@core/helpers';\nimport {\n  TransactionCategoryInterface,\n  TransactionCreateInterface,\n  TransactionReadInterface,\n  TransactionsService,\n  TransactionTypesEnum\n} from '@features/transactions';\n\n@Component({\n  selector: 'app-transaction-details',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatIconModule\n  ],\n  providers: [\n    DestroyService\n  ],\n  templateUrl: './transaction-details.component.html',\n  styleUrls: ['./transaction-details.component.scss']\n})\nexport class TransactionDetailsComponent implements OnInit {\n  @Input() typeId: TransactionTypesEnum | null = null;\n  @Input() title = 'Transaction';\n  accounts$ = this.accountsState.data$;\n  categories = new Loadable<TransactionCategoryInterface[]>([], false);\n  transaction = new Loadable<TransactionReadInterface | null>(null, false);\n  transactionTypes = [{\n    id: TransactionTypesEnum.expense,\n    name: 'Expense'\n  }, {\n    id: TransactionTypesEnum.income,\n    name: 'Income'\n  }]\n\n  formGroup: FormGroup = this.formBuilder.group({\n    amount: [null, Validators.required],\n    description: [null, [Validators.required, Validators.maxLength(500)]],\n    typeId: [null, Validators.required],\n    categoryId: [null, [Validators.required]],\n    accountId: [null, [Validators.required]]\n  });\n\n  constructor(\n    @Inject(DestroyService) private readonly viewDestroyed$: Observable<void>,\n    private readonly formBuilder: FormBuilder,\n    private readonly transactionsService: TransactionsService,\n    private readonly accountsState: AccountsState,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      if (isNaN(Number(id))) {\n        this.router.navigate(['./']);\n      } else {\n        this.loadTransaction(Number(id));\n      }\n    }\n\n    this.resetForm();\n    this.loadCategories();\n    \n    if (!this.typeId) {\n      this.subscribeToTypeId();\n    }\n  }\n\n  onSubmit(form: any): void {\n    if (this.transaction.data) {\n      this.updateTransaction(this.transaction.data.id, form);\n    } else {\n      this.createTransaction(form);\n    }\n  }\n\n  onNewClicked(): void {\n    this.resetForm();\n    this.transaction.setData(null);\n  }\n\n  onViewAllClicked(): void {\n    this.router.navigate(['..'], { relativeTo: this.route });\n  }\n\n  loadCategories(): void {\n    const typeId = this.typeId || this.formGroup.value.typeId;\n    this.categories.isLoading = true;\n    this.transactionsService.getCategories(typeId)\n      .pipe(takeUntil(this.viewDestroyed$))\n      .subscribe({\n        next: data => this.categories.setData(data),\n        error: error => this.categories.setError(error)\n      });\n  }\n\n  loadTransaction(id: number): void {\n    this.transaction.isLoading = true;\n    this.transactionsService.getById(id)\n      .pipe(takeUntil(this.viewDestroyed$))\n      .subscribe(t => {\n        this.transaction.setData(t);\n        this.formGroup.reset(t);\n      });\n  }\n\n  createTransaction(t: TransactionCreateInterface): void {\n    this.transaction.isLoading = true;\n    this.transactionsService.create(t)\n      .pipe(takeUntil(this.viewDestroyed$))\n      .subscribe(t => {\n        this.transaction.setData(t);\n        this.formGroup.reset(t);\n      });\n  }\n\n  updateTransaction(id: number, t: TransactionCreateInterface): void {\n    this.transaction.isLoading = true;\n    this.transactionsService.updateById(id, t)\n      .pipe(takeUntil(this.viewDestroyed$))\n      .subscribe(t => {\n        this.transaction.setData(t);\n        this.formGroup.reset(t);\n      });\n  }\n\n  resetForm(): void {\n    this.formGroup.reset({ typeId: this.typeId });\n  }\n\n  subscribeToTypeId(): void {\n    this.formGroup.get('typeId')?.valueChanges\n      .subscribe(() => {\n        this.formGroup.get('categoryId')?.reset();\n        this.loadCategories();\n      });\n  }\n}\n","<ng-container *ngIf=\"!transaction.isLoading\">\n  <h1>{{title}} {{transaction.data ? transaction.data.id : 'create'}}</h1>\n  \n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit(formGroup.value)\" class=\"form\">\n    <mat-form-field class=\"element\" *ngIf=\"!typeId\">\n      <mat-label>Type</mat-label>\n      <mat-select formControlName=\"typeId\">\n        <mat-option *ngFor=\"let type of transactionTypes\" [value]=\"type.id\">\n          {{type.name}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    \n    <mat-form-field class=\"element\">\n      <mat-label>Amount</mat-label>\n      <input matInput type=\"number\" placeholder=\"Amount\" formControlName=\"amount\">\n    </mat-form-field>\n  \n    <mat-form-field class=\"element\">\n      <mat-label>Account</mat-label>\n      <mat-select formControlName=\"accountId\">\n        <mat-option *ngFor=\"let account of accounts$ | async\" [value]=\"account.id\">\n          {{account.name}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  \n    <mat-form-field class=\"element\">\n      <mat-label>Category</mat-label>\n      <mat-select formControlName=\"categoryId\">\n        <mat-option *ngFor=\"let category of categories.data\" [value]=\"category.id\">\n          {{category.name}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  \n    <mat-form-field class=\"element\">\n      <mat-label>Bike name</mat-label>\n      <input \n        matInput \n        placeholder=\"Bike name\" \n        formControlName=\"bikeName\"\n        [matAutocomplete]=\"autocomplete\"\n      >\n  \n      <button type=\"button\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"onClearBikeNameClicked()\">\n        <mat-icon>close</mat-icon>\n      </button>\n  \n      <mat-autocomplete \n        #autocomplete=\"matAutocomplete\" \n        (optionSelected)=\"onBikeSelected($event)\"\n      >\n        <mat-option *ngIf=\"bikes.isLoading\">Loading...</mat-option>\n        <ng-container *ngIf=\"!bikes.isLoading\">\n          <mat-option *ngFor=\"let bike of bikes.data\" [value]=\"bike\">\n            {{bike.name}} {{bike.number}}\n          </mat-option>\n        </ng-container>\n      </mat-autocomplete>\n    </mat-form-field>\n\n    <mat-form-field class=\"element\">\n      <mat-label>Description</mat-label>\n      <textarea matInput placeholder=\"Description...\" formControlName=\"description\"></textarea>\n    </mat-form-field>\n  \n    <div class=\"sbumit\">\n      <button \n        mat-raised-button\n        color=\"primary\" \n        type=\"button\" \n        (click)=\"onNewClicked()\"\n        [disabled]=\"formGroup.dirty\"\n      >\n        New\n      </button>\n      <button \n        mat-raised-button \n        color=\"primary\" \n        type=\"submit\" \n        [disabled]=\"!formGroup.valid || !formGroup.dirty\"\n      >\n        Save\n      </button>    \n      <button \n        mat-raised-button\n        color=\"primary\" \n        type=\"button\"\n        (click)=\"onViewAllClicked()\"\n        [disabled]=\"formGroup.dirty\"\n      >\n        View all\n      </button>    \n    </div>\n  </form>\n</ng-container>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}