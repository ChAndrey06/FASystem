{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@features/users\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nfunction ToolbarComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 4)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"logout\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const userData_r2 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", userData_r2.name, \" - \", userData_r2.login, \" \");\n  }\n}\nexport class ToolbarComponent {\n  constructor(userState, authService) {\n    this.userState = userState;\n    this.authService = authService;\n    this.userData$ = this.userState.data$;\n  }\n  onMenuClicked() {\n    this.authService.login({\n      login: 'admin',\n      password: '1234567890'\n    }).subscribe();\n  }\n  onCloseClicked() {\n    this.authService.logout().subscribe();\n  }\n}\nToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n  return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(i1.UserState), i0.ɵɵdirectiveInject(i1.AuthService));\n};\nToolbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ToolbarComponent,\n  selectors: [[\"app-toolbar\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 17,\n  vars: 4,\n  consts: [[\"color\", \"primary\"], [\"mat-icon-button\", \"\", 3, \"click\"], [1, \"spaicer\"], [4, \"ngIf\", \"ngIfElse\"], [\"mat-icon-button\", \"\"], [\"loginBtn\", \"\"]],\n  template: function ToolbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\")(1, \"mat-toolbar\", 0)(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_2_listener() {\n        return ctx.onMenuClicked();\n      });\n      i0.ɵɵelementStart(3, \"mat-icon\");\n      i0.ɵɵtext(4, \"menu\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_5_listener() {\n        return ctx.onCloseClicked();\n      });\n      i0.ɵɵelementStart(6, \"mat-icon\");\n      i0.ɵɵtext(7, \"close\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"span\");\n      i0.ɵɵtext(9, \"FASystem\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"span\", 2);\n      i0.ɵɵtemplate(11, ToolbarComponent_ng_container_11_Template, 5, 2, \"ng-container\", 3);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵelementStart(13, \"button\", 4, 5)(15, \"mat-icon\");\n      i0.ɵɵtext(16, \"login\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(14);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(12, 2, ctx.userData$))(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [CommonModule, i2.NgIf, i2.AsyncPipe, MatToolbarModule, i3.MatToolbar, MatIconModule, i4.MatIcon, MatButtonModule, i5.MatIconButton],\n  styles: [\".spaicer[_ngcontent-%COMP%] {\\n  flex: 1 1 auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGF5b3V0cy9jb21wb25lbnRzL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5zcGFpY2VyIHtcbiAgZmxleDogMSAxIGF1dG87XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;;;;;;;;;ICmBtDC,6BAAqE;IACnEA,YACA;IAAAA,iCAAwB;IACZA,sBAAM;IAAAA,iBAAW;IAE/BA,0BAAe;;;;IAJbA,eACA;IADAA,2EACA;;;ADFN,OAAM,MAAOC,gBAAgB;EAG3BC,YACmBC,SAAoB,EACrBC,WAAwB;IADvB,cAAS,GAATD,SAAS;IACV,gBAAW,GAAXC,WAAW;IAJb,cAAS,GAAG,IAAI,CAACD,SAAS,CAACE,KAAK;EAK5C;EAEJC,aAAa;IACX,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACrBA,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE;KACX,CAAC,CAACC,SAAS,EAAE;EAChB;EAEAC,cAAc;IACZ,IAAI,CAACN,WAAW,CAACO,MAAM,EAAE,CAACF,SAAS,EAAE;EACvC;;AAjBWR,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCxB7BlB,yBAAG;MAgByBA;QAAA,OAASmB,mBAAe;MAAA,EAAC;MAC/CnB,gCAAU;MAAAA,oBAAI;MAAAA,iBAAW;MAE3BA,iCAAmD;MAA3BA;QAAA,OAASmB,oBAAgB;MAAA,EAAC;MAChDnB,gCAAU;MAAAA,qBAAK;MAAAA,iBAAW;MAE5BA,4BAAM;MAAAA,wBAAQ;MAAAA,iBAAO;MACrBA,2BAA6B;MAC7BA,qFAKe;;MACfA,qCAAkC;MACtBA,sBAAK;MAAAA,iBAAW;;;;MAPbA,gBAA0B;MAA1BA,2DAA0B;;;iBDXzCJ,YAAY,yBAEZC,gBAAgB,iBAChBC,aAAa,cACbC,eAAe;EAAAqB;AAAA","names":["CommonModule","MatToolbarModule","MatIconModule","MatButtonModule","i0","ToolbarComponent","constructor","userState","authService","data$","onMenuClicked","login","password","subscribe","onCloseClicked","logout","selectors","standalone","features","decls","vars","consts","template","ctx","styles"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/layouts/components/toolbar/toolbar.component.ts","/home/eagold/MyFiles/FASystem/FASystemClient/src/app/layouts/components/toolbar/toolbar.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { AuthService, UserState } from '@features/users';\n\n@Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  templateUrl: 'toolbar.component.html',\n  styleUrls: [\n    'toolbar.component.scss'\n  ]\n})\nexport class ToolbarComponent {\n  public readonly userData$ = this.userState.data$;\n\n  constructor(\n    private readonly userState: UserState,\n    public readonly authService: AuthService\n  ) { }\n\n  onMenuClicked() {\n    this.authService.login({\n      login: 'admin',\n      password: '1234567890'\n    }).subscribe();\n  }\n\n  onCloseClicked() {\n    this.authService.logout().subscribe();\n  }\n}\n","<p>\n  <!-- <mat-toolbar color=\"primary\" style=\"display: flex; justify-content: space-between;\">\n    <div>\n      <button mat-icon-button (click)=\"onMenuClicked()\">\n        <mat-icon>menu</mat-icon>\n      </button>        \n      <button mat-icon-button (click)=\"onCloseClicked()\">\n        <mat-icon>close</mat-icon>\n      </button>\n      <span>FASystem</span>\n    </div>\n    <div *ngIf=\"(userData$ | async) as userData\">\n      {{userData.name}} - {{userData.login}}\n    </div>\n  </mat-toolbar> -->\n  <mat-toolbar color=\"primary\">\n    <button mat-icon-button (click)=\"onMenuClicked()\">\n      <mat-icon>menu</mat-icon>\n    </button>    \n    <button mat-icon-button (click)=\"onCloseClicked()\">\n      <mat-icon>close</mat-icon>\n    </button>\n    <span>FASystem</span>\n    <span class=\"spaicer\"></span>\n    <ng-container *ngIf=\"(userData$ | async) as userData; else loginBtn\">\n      {{userData.name}} - {{userData.login}}\n      <button mat-icon-button>\n        <mat-icon>logout</mat-icon>\n      </button>\n    </ng-container>\n    <button #loginBtn mat-icon-button>\n      <mat-icon>login</mat-icon>\n    </button>\n  </mat-toolbar>\n</p>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}