{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { takeUntil } from 'rxjs';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DestroyService } from '@core/services';\nimport { Loadable } from '@core/helpers';\nimport { TransactionTypesEnum } from '@features/transactions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@features/transactions\";\nimport * as i3 from \"@features/accounts\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"rxjs\";\nfunction DetailsComponent_mat_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const account_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", account_r2.name, \" \");\n  }\n}\nfunction DetailsComponent_mat_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r3.name, \" \");\n  }\n}\nexport class DetailsComponent {\n  constructor(viewDestroyed$, formBuilder, transactionsService, accountsState, accountsService) {\n    this.viewDestroyed$ = viewDestroyed$;\n    this.formBuilder = formBuilder;\n    this.transactionsService = transactionsService;\n    this.accountsState = accountsState;\n    this.accountsService = accountsService;\n    this.accounts$ = this.accountsState.data$;\n    this.categories = new Loadable([], false);\n    this.formGroup = this.formBuilder.group({\n      amount: [null, Validators.required],\n      description: [null, [Validators.required, Validators.maxLength(500)]],\n      typeId: [TransactionTypesEnum.expense, Validators.required],\n      categoryId: [null, [Validators.required]],\n      accountId: [null, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    // this.formGroup.reset(this.expense);\n    this.updateCategories();\n  }\n  onSubmit(form) {\n    console.log(form);\n    this.transactionsService.create(form).pipe(takeUntil(this.viewDestroyed$)).subscribe();\n  }\n  updateCategories() {\n    this.categories.isLoading = true;\n    this.transactionsService.getCategories(TransactionTypesEnum.expense).pipe(takeUntil(this.viewDestroyed$)).subscribe({\n      next: data => this.categories.setData(data),\n      error: error => this.categories.setError(error)\n    });\n  }\n}\nDetailsComponent.ɵfac = function DetailsComponent_Factory(t) {\n  return new (t || DetailsComponent)(i0.ɵɵdirectiveInject(DestroyService), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TransactionsService), i0.ɵɵdirectiveInject(i3.AccountsState), i0.ɵɵdirectiveInject(i3.AccountsService));\n};\nDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DetailsComponent,\n  selectors: [[\"app-details\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 23,\n  vars: 6,\n  consts: [[1, \"form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"element\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"Amount\", \"formControlName\", \"amount\"], [\"formControlName\", \"accountId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"categoryId\"], [\"matInput\", \"\", \"placeholder\", \"Description...\", \"formControlName\", \"description\"], [1, \"sbumit\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"sbumit-button\", 3, \"disabled\"], [3, \"value\"]],\n  template: function DetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function DetailsComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit(ctx.formGroup.value);\n      });\n      i0.ɵɵelementStart(1, \"mat-form-field\", 1)(2, \"mat-label\");\n      i0.ɵɵtext(3, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-form-field\", 1)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-select\", 3);\n      i0.ɵɵtemplate(9, DetailsComponent_mat_option_9_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"mat-form-field\", 1)(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"mat-select\", 5);\n      i0.ɵɵtemplate(15, DetailsComponent_mat_option_15_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"mat-form-field\", 1)(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"textarea\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 7)(21, \"button\", 8);\n      i0.ɵɵtext(22, \" Save \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 4, ctx.accounts$));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories.data);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", !(ctx.formGroup.valid && ctx.formGroup.dirty));\n    }\n  },\n  dependencies: [CommonModule, i4.NgForOf, i4.AsyncPipe, FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i5.MatFormField, i5.MatLabel, MatSelectModule, i6.MatSelect, i7.MatOption, MatInputModule, i8.MatInput, MatButtonModule, i9.MatButton],\n  styles: [\".form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: auto;\\n  align-items: center;\\n  max-width: 400px;\\n}\\n.form[_ngcontent-%COMP%]    > .element[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n.form[_ngcontent-%COMP%]    > .sbumit-button[_ngcontent-%COMP%] {\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZXhwZW5zZXMvZGV0YWlscy9kZXRhaWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUFDRjtBQUNFO0VBQ0UsV0FBQTtBQUNKO0FBRUU7RUFDRSxZQUFBO0FBQUoiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbjogYXV0bztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWF4LXdpZHRoOiA0MDBweDtcblxuICA+IC5lbGVtZW50IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gID4gLnNidW1pdC1idXR0b24ge1xuICAgIG1hcmdpbjogYXV0bztcbiAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","takeUntil","MatFormFieldModule","MatSelectModule","MatInputModule","MatButtonModule","DestroyService","Loadable","TransactionTypesEnum","i0","DetailsComponent","constructor","viewDestroyed$","formBuilder","transactionsService","accountsState","accountsService","data$","group","amount","required","description","maxLength","typeId","expense","categoryId","accountId","ngOnInit","updateCategories","onSubmit","form","console","log","create","pipe","subscribe","categories","isLoading","getCategories","next","data","setData","error","setError","selectors","standalone","features","decls","vars","consts","template","ctx","styles"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/pages/expenses/details/details.component.ts","/home/eagold/MyFiles/FASystem/FASystemClient/src/app/pages/expenses/details/details.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\n\nimport { Observable, takeUntil } from 'rxjs';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { DestroyService } from '@core/services';\nimport { AccountInterface, AccountsState, AccountsService } from '@features/accounts';\nimport { Loadable } from '@core/helpers';\nimport {\n  TransactionCategoryInterface,\n  TransactionReadInterface,\n  TransactionsService,\n  TransactionTypesEnum\n} from '@features/transactions';\n\n@Component({\n  selector: 'app-details',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule\n  ],\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent {\n  accounts$ = this.accountsState.data$;\n  categories = new Loadable<TransactionCategoryInterface[]>([], false);\n  expense!: TransactionReadInterface;\n\n  formGroup: FormGroup = this.formBuilder.group({\n    amount: [null, Validators.required],\n    description: [null, [Validators.required, Validators.maxLength(500)]],\n    typeId: [TransactionTypesEnum.expense, Validators.required],\n    categoryId: [null, [Validators.required]],\n    accountId: [null, [Validators.required]]\n  });\n\n  constructor(\n    @Inject(DestroyService) private readonly viewDestroyed$: Observable<void>,\n    private readonly formBuilder: FormBuilder,\n    private readonly transactionsService: TransactionsService,\n    private readonly accountsState: AccountsState,\n    private readonly accountsService: AccountsService\n  ) { }\n\n  ngOnInit(): void {\n    // this.formGroup.reset(this.expense);\n    this.updateCategories();\n  }\n\n  onSubmit(form: any) {\n    console.log(form);\n    this.transactionsService.create(form)\n      .pipe(takeUntil(this.viewDestroyed$))\n      .subscribe();\n  }\n\n  updateCategories(): void {\n    this.categories.isLoading = true;\n    this.transactionsService.getCategories(TransactionTypesEnum.expense)\n      .pipe(takeUntil(this.viewDestroyed$))\n      .subscribe({\n        next: data => this.categories.setData(data),\n        error: error => this.categories.setError(error)\n      });\n  }\n}\n","<form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit(formGroup.value)\" class=\"form\">\n  <mat-form-field class=\"element\">\n    <mat-label>Amount</mat-label>\n    <input matInput type=\"number\" placeholder=\"Amount\" formControlName=\"amount\">\n  </mat-form-field>\n\n  <mat-form-field class=\"element\">\n    <mat-label>Account</mat-label>\n    <mat-select formControlName=\"accountId\">\n      <mat-option *ngFor=\"let account of accounts$ | async\" [value]=\"account.id\">\n        {{account.name}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field class=\"element\">\n    <mat-label>Category</mat-label>\n    <mat-select formControlName=\"categoryId\">\n      <mat-option *ngFor=\"let category of categories.data\" [value]=\"category.id\">\n        {{category.name}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field class=\"element\">\n    <mat-label>Description</mat-label>\n    <textarea matInput placeholder=\"Description...\" formControlName=\"description\"></textarea>\n  </mat-form-field>\n\n  <div class=\"sbumit\">\n    <button \n      mat-raised-button \n      class=\"sbumit-button\"\n      color=\"primary\" \n      type=\"submit\" \n      [disabled]=\"!(formGroup.valid && formGroup.dirty)\"\n    >\n      Save\n    </button>\n  </div>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}