{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@features/users\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nfunction ToolbarComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const userData_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", userData_r1.name, \" - \", userData_r1.login, \" \");\n  }\n}\nexport class ToolbarComponent {\n  constructor(userState, authService) {\n    this.userState = userState;\n    this.authService = authService;\n    this.userData$ = this.userState.data$;\n  }\n  onMenuClicked() {\n    this.authService.login({\n      login: 'admin',\n      password: '1234567890'\n    }).subscribe();\n  }\n  onCloseClicked() {\n    // this.userState.clear();\n    this.authService.logout().subscribe();\n  }\n}\nToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n  return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(i1.UserState), i0.ɵɵdirectiveInject(i1.AuthService));\n};\nToolbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ToolbarComponent,\n  selectors: [[\"app-toolbar\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 13,\n  vars: 3,\n  consts: [[\"color\", \"primary\", 2, \"display\", \"flex\", \"justify-content\", \"space-between\"], [\"mat-icon-button\", \"\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function ToolbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\")(1, \"mat-toolbar\", 0);\n      i0.ɵɵelement(2, \"div\");\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_3_listener() {\n        return ctx.onMenuClicked();\n      });\n      i0.ɵɵelementStart(4, \"mat-icon\");\n      i0.ɵɵtext(5, \"menu\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_6_listener() {\n        return ctx.onCloseClicked();\n      });\n      i0.ɵɵelementStart(7, \"mat-icon\");\n      i0.ɵɵtext(8, \"close\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"span\");\n      i0.ɵɵtext(10, \"FASystem\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, ToolbarComponent_div_11_Template, 2, 2, \"div\", 2);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(12, 1, ctx.userData$));\n    }\n  },\n  dependencies: [CommonModule, i2.NgIf, i2.AsyncPipe, MatToolbarModule, i3.MatToolbar, MatIconModule, i4.MatIcon, MatButtonModule, i5.MatIconButton],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;;;;;;;;;IA2BhDC,2BAA6C;IAC3CA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,2EACF;;;AAOV,OAAM,MAAOC,gBAAgB;EAG3BC,YACmBC,SAAoB,EACpBC,WAAwB;IADxB,cAAS,GAATD,SAAS;IACT,gBAAW,GAAXC,WAAW;IAJd,cAAS,GAAG,IAAI,CAACD,SAAS,CAACE,KAAK;EAK5C;EAEJC,aAAa;IACX,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACrBA,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE;KACX,CAAC,CAACC,SAAS,EAAE;EAChB;EAEAC,cAAc;IACZ;IACA,IAAI,CAACN,WAAW,CAACO,MAAM,EAAE,CAACF,SAAS,EAAE;EACvC;;AAlBWR,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MArBzBlB,yBAAG;MAEDA,sBAEM;MACFA,iCAAkD;MAA1BA;QAAA,OAASmB,mBAAe;MAAA,EAAC;MAC/CnB,gCAAU;MAAAA,oBAAI;MAAAA,iBAAW;MAE3BA,iCAAmD;MAA3BA;QAAA,OAASmB,oBAAgB;MAAA,EAAC;MAChDnB,gCAAU;MAAAA,qBAAK;MAAAA,iBAAW;MAE5BA,4BAAM;MAAAA,yBAAQ;MAAAA,iBAAO;MACrBA,mEAEM;;MACVA,iBAAc;;;MAHJA,gBAA0B;MAA1BA,2DAA0B;;;iBAnBtCJ,YAAY,yBAEZC,gBAAgB,iBAChBC,aAAa,cACbC,eAAe;EAAAqB;AAAA","names":["CommonModule","MatToolbarModule","MatIconModule","MatButtonModule","i0","ToolbarComponent","constructor","userState","authService","data$","onMenuClicked","login","password","subscribe","onCloseClicked","logout","selectors","standalone","features","decls","vars","consts","template","ctx","encapsulation"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/layouts/components/toolbar/toolbar.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { AuthService, UserState } from '@features/users';\n\n@Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  template: `\n    <p>\n      <mat-toolbar color=\"primary\" style=\"display: flex; justify-content: space-between;\">\n      <div>\n        \n      </div>\n          <button mat-icon-button (click)=\"onMenuClicked()\">\n            <mat-icon>menu</mat-icon>\n          </button>        \n          <button mat-icon-button (click)=\"onCloseClicked()\">\n            <mat-icon>close</mat-icon>\n          </button>\n          <span>FASystem</span>\n          <div *ngIf=\"(userData$ | async) as userData\">\n            {{userData.name}} - {{userData.login}}\n          </div>\n      </mat-toolbar>\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ToolbarComponent {\n  public readonly userData$ = this.userState.data$;\n\n  constructor(\n    private readonly userState: UserState,\n    private readonly authService: AuthService\n  ) { }\n\n  onMenuClicked() {\n    this.authService.login({\n      login: 'admin',\n      password: '1234567890'\n    }).subscribe();\n  }\n\n  onCloseClicked() {\n    // this.userState.clear();\n    this.authService.logout().subscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}