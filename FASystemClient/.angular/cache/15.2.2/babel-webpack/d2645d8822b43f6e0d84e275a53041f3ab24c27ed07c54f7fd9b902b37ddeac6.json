{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@features/users\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction LoginComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Invalid credentials \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(authService, formBuilder) {\n    this.authService = authService;\n    this.formBuilder = formBuilder;\n    this.formGroup = this.formBuilder.group({\n      login: [null, Validators.required],\n      password: [null, Validators.required]\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 16,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-element\"], [\"matInput\", \"\", \"placeholder\", \"Login\", \"formControlName\", \"login\", \"autofocus\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"type\", \"password\", \"formControlName\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"button\", 3, \"disabled\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n      i0.ɵɵtext(2, \"login wirks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onLoginSubmit(ctx.formGroup.value);\n      });\n      i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"button\", 5);\n      i0.ɵɵtext(14, \" Login \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, LoginComponent_mat_error_15_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"disabled\", !ctx.formGroup.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginError);\n    }\n  },\n  dependencies: [CommonModule, i3.NgIf, FormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, ReactiveFormsModule, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAAgDC,WAAW,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;ICgBhHC,iCAA8B;IAC5BA,qCACF;IAAAA,iBAAY;;;ADDhB,OAAM,MAAOC,cAAc;EAMzBC,YACmBC,WAAwB,EACjCC,WAAwB;IADf,gBAAW,GAAXD,WAAW;IACpB,gBAAW,GAAXC,WAAW;IAPrB,cAAS,GAAc,IAAI,CAACA,WAAW,CAACC,KAAK,CAAkC;MAC7EC,KAAK,EAAE,CAAC,IAAI,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAClCC,QAAQ,EAAE,CAAC,IAAI,EAAET,UAAU,CAACQ,QAAQ;KACrC,CAAC;EAKE;;AATON,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCnB3Bf,8BAAuB;MAClBA,2BAAW;MAAAA,iBAAI;MAClBA,+BAAuF;MAAzDA;QAAA,OAAYgB,sCAA8B;MAAA,EAAC;MACvEhB,yCAAqC;MACxBA,qBAAK;MAAAA,iBAAY;MAC5BA,2BAAsE;MACxEA,iBAAiB;MAEjBA,yCAAqC;MACxBA,yBAAQ;MAAAA,iBAAY;MAC/BA,4BAAkF;MACpFA,iBAAiB;MAEjBA,+BAA0B;MAEtBA,wBACF;MAAAA,iBAAS;MAEXA,6EAEY;MACdA,iBAAO;;;MAnBDA,eAAuB;MAAvBA,yCAAuB;MAY8CA,gBAA6B;MAA7BA,+CAA6B;MAI1FA,eAAgB;MAAhBA,qCAAgB;;;iBDR5BJ,YAAY,WACZC,WAAW,0FACXC,mBAAmB;EAAAmB;AAAA","names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","i0","LoginComponent","constructor","authService","formBuilder","group","login","required","password","selectors","standalone","features","decls","vars","consts","template","ctx","styles"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/pages/login/login.component.ts","/home/eagold/MyFiles/FASystem/FASystemClient/src/app/pages/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlConfig, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\n\nimport { AuthService, LoginInterface, UserInterface } from '@features/users';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  templateUrl: 'login.component.html',\n  styleUrls: [\n    'login.component.scss'\n  ]\n})\nexport class LoginComponent {\n  formGroup: FormGroup = this.formBuilder.group<ControlConfigMap<UserInterface>>({\n    login: [null, Validators.required],\n    password: [null, Validators.required]\n  });\n\n  constructor(\n    private readonly authService: AuthService,\n    private formBuilder: FormBuilder,\n  ) { }\n}\n\nexport type ControlConfigMap<T> = {\n  [K in keyof T]: ControlConfig<T[K]>\n};","<div class=\"container\">\n  <p>login wirks</p>\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"onLoginSubmit(formGroup.value)\" class=\"form\">\n    <mat-form-field class=\"form-element\">\n      <mat-label>Login</mat-label>\n      <input matInput placeholder=\"Login\" formControlName=\"login\" autofocus>\n    </mat-form-field>\n  \n    <mat-form-field class=\"form-element\">\n      <mat-label>Password</mat-label>\n      <input matInput placeholder=\"Password\" type=\"password\" formControlName=\"password\">\n    </mat-form-field>\n    \n    <div class=\"form-element\">\n      <button mat-raised-button color=\"primary\" type=\"submit\" class=\"button\" [disabled]=\"!formGroup.valid\">\n        Login\n      </button>\n    </div>\n    <mat-error *ngIf=\"loginError\">\n      Invalid credentials\n    </mat-error>\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}