{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { takeUntil } from 'rxjs';\nlet LoginComponent = class LoginComponent {\n  constructor(viewDestroyed$, authService, formBuilder, router) {\n    this.viewDestroyed$ = viewDestroyed$;\n    this.authService = authService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.loginError = false;\n    this.formGroup = this.formBuilder.group({\n      login: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(18)]]\n    });\n  }\n  onLoginSubmit(login) {\n    this.loginError = false;\n    this.authService.login(login).pipe(takeUntil(this.viewDestroyed$)).subscribe();\n    // .subscribe(success => {\n    //   if (success)\n    //     this.router.navigate(['']);\n    //   else \n    //     this.loginError = true;\n    // });\n  }\n};\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MatFormFieldModule, MatButtonModule, MatInputModule],\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.component.scss']\n}), __param(0, Inject(DestroyService))], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAAiCC,WAAW,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAErG,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,cAAc,QAAQ,yBAAyB;AAIxD,SAASC,SAAS,QAAQ,MAAM;AAmBzB,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YAC2CC,cAAgC,EACxDC,WAAwB,EACjCC,WAAwB,EACfC,MAAc;IAHU,mBAAc,GAAdH,cAAc;IACtC,gBAAW,GAAXC,WAAW;IACpB,gBAAW,GAAXC,WAAW;IACF,WAAM,GAANC,MAAM;IAVzB,eAAU,GAAY,KAAK;IAC3B,cAAS,GAAc,IAAI,CAACD,WAAW,CAACE,KAAK,CAAmC;MAC9EC,KAAK,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACa,QAAQ,CAAC;MAChCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,EAAEf,UAAU,CAACgB,SAAS,CAAC,EAAE,CAAC,CAAC;KACxF,CAAC;EAOE;EAEJC,aAAa,CAACL,KAAqB;IACjC,IAAI,CAACM,UAAU,GAAG,KAAK;IACvB,IAAI,CAACV,WAAW,CAACI,KAAK,CAACA,KAAK,CAAC,CAC1BO,IAAI,CAACf,SAAS,CAAC,IAAI,CAACG,cAAc,CAAC,CAAC,CACpCa,SAAS,EAAE;IAEZ;IACA;IACA;IACA;IACA;IACA;EACJ;CACD;;AA3BYf,cAAc,eAjB1BT,SAAS,CAAC;EACTyB,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACP1B,YAAY,EACZC,WAAW,EACXC,mBAAmB,EAEnBE,kBAAkB,EAClBC,eAAe,EACfC,cAAc,CACf;EACDqB,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CACT,sBAAsB;CAEzB,CAAC,EASGC,iBAAM,CAACC,cAAc,CAAC,IARdtB,cAAc,CA2B1B;SA3BYA,cAAc","names":["Component","CommonModule","FormsModule","ReactiveFormsModule","Validators","MatFormFieldModule","MatButtonModule","MatInputModule","takeUntil","LoginComponent","constructor","viewDestroyed$","authService","formBuilder","router","group","login","required","password","minLength","maxLength","onLoginSubmit","loginError","pipe","subscribe","selector","standalone","imports","templateUrl","styleUrls","__param","DestroyService"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/pages/login/login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { AuthService, LoginInterface } from '@features/users';\nimport { ControlConfigMap } from '@core/helpers';\nimport { takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule\n  ],\n  templateUrl: 'login.component.html',\n  styleUrls: [\n    'login.component.scss'\n  ]\n})\nexport class LoginComponent {\n  loginError: boolean = false;\n  formGroup: FormGroup = this.formBuilder.group<ControlConfigMap<LoginInterface>>({\n    login: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(18)]]\n  });\n\n  constructor(\n    @Inject(DestroyService) private readonly viewDestroyed$: Observable<void>,\n    private readonly authService: AuthService,\n    private formBuilder: FormBuilder,\n    private readonly router: Router,\n  ) { }\n\n  onLoginSubmit(login: LoginInterface) {\n    this.loginError = false;\n    this.authService.login(login)\n      .pipe(takeUntil(this.viewDestroyed$))\n      .subscribe();\n\n      // .subscribe(success => {\n      //   if (success)\n      //     this.router.navigate(['']);\n      //   else \n      //     this.loginError = true;\n      // });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}