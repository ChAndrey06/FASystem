{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@features/users\";\nimport * as i2 from \"@angular/material/toolbar\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/button\";\nexport class ToolbarComponent {\n  constructor(userState, authService) {\n    this.userState = userState;\n    this.authService = authService;\n    this.userData$ = this.userState.data$;\n  }\n  onMenuClicked() {\n    this.authService.login({\n      login: 'admin',\n      password: '1234567890'\n    }).subscribe();\n  }\n  onCloseClicked() {\n    // this.userState.clear();\n    this.authService.logout().subscribe();\n  }\n}\nToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n  return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(i1.UserState), i0.ɵɵdirectiveInject(i1.AuthService));\n};\nToolbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ToolbarComponent,\n  selectors: [[\"app-toolbar\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 14,\n  vars: 0,\n  consts: [[\"color\", \"primary\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with menu icon\", 1, \"example-icon\"], [1, \"example-spacer\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with heart icon\", 1, \"example-icon\", \"favorite-icon\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with share icon\", 1, \"example-icon\"]],\n  template: function ToolbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\")(1, \"mat-toolbar\", 0)(2, \"button\", 1)(3, \"mat-icon\");\n      i0.ɵɵtext(4, \"menu\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"span\");\n      i0.ɵɵtext(6, \"My App\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"span\", 2);\n      i0.ɵɵelementStart(8, \"button\", 3)(9, \"mat-icon\");\n      i0.ɵɵtext(10, \"favorite\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 4)(12, \"mat-icon\");\n      i0.ɵɵtext(13, \"share\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [CommonModule, MatToolbarModule, i2.MatToolbar, MatIconModule, i3.MatIcon, MatButtonModule, i4.MatIconButton],\n  styles: [\".spaicer[_ngcontent-%COMP%] {\\n  flex: 1 1 auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGF5b3V0cy9jb21wb25lbnRzL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDTSxjQUFBO0FBQ04iLCJzb3VyY2VzQ29udGVudCI6WyIuc3BhaWNlciB7XG4gICAgICBmbGV4OiAxIDEgYXV0bztcbiAgICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;;;;;;AAmD1D,OAAM,MAAOC,gBAAgB;EAG3BC,YACmBC,SAAoB,EACpBC,WAAwB;IADxB,cAAS,GAATD,SAAS;IACT,gBAAW,GAAXC,WAAW;IAJd,cAAS,GAAG,IAAI,CAACD,SAAS,CAACE,KAAK;EAK5C;EAEJC,aAAa;IACX,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACrBA,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE;KACX,CAAC,CAACC,SAAS,EAAE;EAChB;EAEAC,cAAc;IACZ;IACA,IAAI,CAACN,WAAW,CAACO,MAAM,EAAE,CAACF,SAAS,EAAE;EACvC;;AAlBWR,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MApCzBC,yBAAG;MAiBSA,oBAAI;MAAAA,iBAAW;MAE3BA,4BAAM;MAAAA,sBAAM;MAAAA,iBAAO;MACnBA,0BAAoC;MACpCA,iCAA4G;MAChGA,yBAAQ;MAAAA,iBAAW;MAE/BA,kCAA8F;MAClFA,sBAAK;MAAAA,iBAAW;;;iBAhC5BtB,YAAY,EAEZC,gBAAgB,iBAChBC,aAAa,cACbC,eAAe;EAAAoB;AAAA","names":["CommonModule","MatToolbarModule","MatIconModule","MatButtonModule","ToolbarComponent","constructor","userState","authService","data$","onMenuClicked","login","password","subscribe","onCloseClicked","logout","selectors","standalone","features","decls","vars","consts","template","i0","styles"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/layouts/components/toolbar/toolbar.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { AuthService, UserState } from '@features/users';\n\n@Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  template: `\n    <p>\n      <!-- <mat-toolbar color=\"primary\" style=\"display: flex; justify-content: space-between;\">\n        <div>\n          <button mat-icon-button (click)=\"onMenuClicked()\">\n            <mat-icon>menu</mat-icon>\n          </button>        \n          <button mat-icon-button (click)=\"onCloseClicked()\">\n            <mat-icon>close</mat-icon>\n          </button>\n          <span>FASystem</span>\n        </div>\n        <div *ngIf=\"(userData$ | async) as userData\">\n          {{userData.name}} - {{userData.login}}\n        </div>\n      </mat-toolbar> -->\n      <mat-toolbar color=\"primary\">\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>My App</span>\n    <span class=\"example-spacer\"></span>\n    <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n      <mat-icon>share</mat-icon>\n    </button>\n  </mat-toolbar>\n    </p>\n  `,\n  styles: [\n    `.spaicer {\n      flex: 1 1 auto;\n    }`\n  ]\n})\nexport class ToolbarComponent {\n  public readonly userData$ = this.userState.data$;\n\n  constructor(\n    private readonly userState: UserState,\n    private readonly authService: AuthService\n  ) { }\n\n  onMenuClicked() {\n    this.authService.login({\n      login: 'admin',\n      password: '1234567890'\n    }).subscribe();\n  }\n\n  onCloseClicked() {\n    // this.userState.clear();\n    this.authService.logout().subscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}