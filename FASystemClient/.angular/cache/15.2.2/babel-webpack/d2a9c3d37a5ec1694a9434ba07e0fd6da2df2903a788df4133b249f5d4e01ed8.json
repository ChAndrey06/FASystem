{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@features/users\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nfunction ToolbarComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const userData_r4 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", userData_r4.name, \" - \", userData_r4.login, \" \");\n  }\n}\nfunction ToolbarComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ToolbarComponent_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 5, 8)(2, \"mat-icon\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.isLoggedIn ? \"login\" : \"logout\");\n  }\n}\nexport class ToolbarComponent {\n  constructor(userState, authService) {\n    this.userState = userState;\n    this.authService = authService;\n    this.userData$ = this.userState.data$;\n  }\n  onMenuClicked() {\n    this.authService.login({\n      login: 'admin',\n      password: '1234567890'\n    }).subscribe();\n  }\n  onCloseClicked() {\n    this.authService.logout().subscribe();\n  }\n  get isLoggedIn() {\n    return this.authService.isLoggedIn;\n  }\n}\nToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n  return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(i1.UserState), i0.ɵɵdirectiveInject(i1.AuthService));\n};\nToolbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ToolbarComponent,\n  selectors: [[\"app-toolbar\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 19,\n  vars: 6,\n  consts: [[\"color\", \"primary\"], [\"mat-icon-button\", \"\", 3, \"click\"], [1, \"spaicer\"], [4, \"ngIf\"], [4, \"ngIfThen\", \"ngIf\"], [\"mat-icon-button\", \"\"], [\"btnLogin\", \"\"], [\"mat-icon-button\", \"\", 4, \"ngIfElse\", \"ngIf\"], [\"btnLogout\", \"\"]],\n  template: function ToolbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\")(1, \"mat-toolbar\", 0)(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_2_listener() {\n        return ctx.onMenuClicked();\n      });\n      i0.ɵɵelementStart(3, \"mat-icon\");\n      i0.ɵɵtext(4, \"menu\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_5_listener() {\n        return ctx.onCloseClicked();\n      });\n      i0.ɵɵelementStart(6, \"mat-icon\");\n      i0.ɵɵtext(7, \"close\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"span\");\n      i0.ɵɵtext(9, \"FASystem\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"span\", 2);\n      i0.ɵɵtemplate(11, ToolbarComponent_ng_container_11_Template, 2, 2, \"ng-container\", 3);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵtemplate(13, ToolbarComponent_ng_container_13_Template, 1, 0, \"ng-container\", 4);\n      i0.ɵɵelementStart(14, \"button\", 5, 6)(16, \"mat-icon\");\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, ToolbarComponent_button_18_Template, 4, 1, \"button\", 7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(12, 4, ctx.userData$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.isLoggedIn ? \"login\" : \"logout\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n    }\n  },\n  dependencies: [CommonModule, i2.NgIf, i2.AsyncPipe, MatToolbarModule, i3.MatToolbar, MatIconModule, i4.MatIcon, MatButtonModule, i5.MatIconButton],\n  styles: [\".spaicer[_ngcontent-%COMP%] {\\n  flex: 1 1 auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGF5b3V0cy9jb21wb25lbnRzL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5zcGFpY2VyIHtcbiAgZmxleDogMSAxIGF1dG87XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;;;;;;;;;ICmBtDC,6BAAuD;IACrDA,YACF;IAAAA,0BAAe;;;;IADbA,eACF;IADEA,2EACF;;;;;IACAA,wBAEe;;;;;IAIfA,oCAA4D;IAChDA,YAAoC;IAAAA,iBAAW;;;;IAA/CA,eAAoC;IAApCA,4DAAoC;;;ADVpD,OAAM,MAAOC,gBAAgB;EAG3BC,YACmBC,SAAoB,EACpBC,WAAwB;IADxB,cAAS,GAATD,SAAS;IACT,gBAAW,GAAXC,WAAW;IAJd,cAAS,GAAG,IAAI,CAACD,SAAS,CAACE,KAAK;EAK5C;EAEJC,aAAa;IACX,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACrBA,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE;KACX,CAAC,CAACC,SAAS,EAAE;EAChB;EAEAC,cAAc;IACZ,IAAI,CAACN,WAAW,CAACO,MAAM,EAAE,CAACF,SAAS,EAAE;EACvC;EAEA,IAAIG,UAAU;IACZ,OAAO,IAAI,CAACR,WAAW,CAACQ,UAAU;EACpC;;AArBWX,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCxB7BnB,yBAAG;MAgByBA;QAAA,OAASoB,mBAAe;MAAA,EAAC;MAC/CpB,gCAAU;MAAAA,oBAAI;MAAAA,iBAAW;MAE3BA,iCAAmD;MAA3BA;QAAA,OAASoB,oBAAgB;MAAA,EAAC;MAChDpB,gCAAU;MAAAA,qBAAK;MAAAA,iBAAW;MAE5BA,4BAAM;MAAAA,wBAAQ;MAAAA,iBAAO;MACrBA,2BAA6B;MAC7BA,qFAEe;;MACfA,qFAEe;MACfA,qCAAkC;MACtBA,aAAoC;MAAAA,iBAAW;MAE3DA,yEAES;MACXA,iBAAc;;;MAZGA,gBAA0B;MAA1BA,2DAA0B;MAG1BA,eAAkB;MAAlBA,qCAAkB;MAIrBA,eAAoC;MAApCA,yDAAoC;MAEZA,eAAkB;MAAlBA,qCAAkB;;;iBDpBtDJ,YAAY,yBAEZC,gBAAgB,iBAChBC,aAAa,cACbC,eAAe;EAAAsB;AAAA","names":["CommonModule","MatToolbarModule","MatIconModule","MatButtonModule","i0","ToolbarComponent","constructor","userState","authService","data$","onMenuClicked","login","password","subscribe","onCloseClicked","logout","isLoggedIn","selectors","standalone","features","decls","vars","consts","template","ctx","styles"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/layouts/components/toolbar/toolbar.component.ts","/home/eagold/MyFiles/FASystem/FASystemClient/src/app/layouts/components/toolbar/toolbar.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { AuthService, UserState } from '@features/users';\n\n@Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  templateUrl: 'toolbar.component.html',\n  styleUrls: [\n    'toolbar.component.scss'\n  ]\n})\nexport class ToolbarComponent {\n  public readonly userData$ = this.userState.data$;\n\n  constructor(\n    private readonly userState: UserState,\n    private readonly authService: AuthService\n  ) { }\n\n  onMenuClicked() {\n    this.authService.login({\n      login: 'admin',\n      password: '1234567890'\n    }).subscribe();\n  }\n\n  onCloseClicked() {\n    this.authService.logout().subscribe();\n  }\n\n  get isLoggedIn() {\n    return this.authService.isLoggedIn;\n  }\n}\n","<p>\n  <!-- <mat-toolbar color=\"primary\" style=\"display: flex; justify-content: space-between;\">\n    <div>\n      <button mat-icon-button (click)=\"onMenuClicked()\">\n        <mat-icon>menu</mat-icon>\n      </button>        \n      <button mat-icon-button (click)=\"onCloseClicked()\">\n        <mat-icon>close</mat-icon>\n      </button>\n      <span>FASystem</span>\n    </div>\n    <div *ngIf=\"(userData$ | async) as userData\">\n      {{userData.name}} - {{userData.login}}\n    </div>\n  </mat-toolbar> -->\n  <mat-toolbar color=\"primary\">\n    <button mat-icon-button (click)=\"onMenuClicked()\">\n      <mat-icon>menu</mat-icon>\n    </button>    \n    <button mat-icon-button (click)=\"onCloseClicked()\">\n      <mat-icon>close</mat-icon>\n    </button>\n    <span>FASystem</span>\n    <span class=\"spaicer\"></span>\n    <ng-container *ngIf=\"(userData$ | async) as userData;\">\n      {{userData.name}} - {{userData.login}}\n    </ng-container>\n    <ng-container *ngIf=\"isLoggedIn; then\">\n\n    </ng-container>\n    <button #btnLogin mat-icon-button>\n      <mat-icon>{{ isLoggedIn ? 'login' : 'logout'}}</mat-icon>\n    </button>\n    <button #btnLogout mat-icon-button *ngIf=\"isLoggedIn; else\">\n      <mat-icon>{{ isLoggedIn ? 'login' : 'logout'}}</mat-icon>\n    </button>\n  </mat-toolbar>\n</p>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}