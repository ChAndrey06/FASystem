{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { takeUntil } from 'rxjs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DestroyService } from '@core/services';\nlet ToolbarComponent = class ToolbarComponent {\n  constructor(viewDestroyed$, router, authService) {\n    this.viewDestroyed$ = viewDestroyed$;\n    this.router = router;\n    this.authService = authService;\n    this.user = null;\n    this.accounts = new Map();\n  }\n  onLoginClicked() {\n    this.router.navigate(['login']);\n  }\n  onLogoutClicked() {\n    this.authService.logout().pipe(takeUntil(this.viewDestroyed$)).subscribe(() => {\n      this.router.navigate(['']);\n    });\n  }\n  get isLoggedIn() {\n    return this.user != null;\n  }\n};\n__decorate([Input()], ToolbarComponent.prototype, \"user\", void 0);\n__decorate([Input()], ToolbarComponent.prototype, \"accounts\", void 0);\nToolbarComponent = __decorate([Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [CommonModule, MatToolbarModule, MatIconModule, MatButtonModule],\n  providers: [DestroyService],\n  templateUrl: 'toolbar.component.html',\n  styleUrls: ['toolbar.component.scss']\n}), __param(0, Inject(DestroyService))], ToolbarComponent);\nexport { ToolbarComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAgB,eAAe;AAChE,SAASC,YAAY,QAAQ,iBAAiB;AAG9C,SAASC,SAAS,QAAoB,MAAM;AAE5C,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;AAG1D,SAASC,cAAc,QAAQ,gBAAgB;AAqBxC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAC2CC,cAAgC,EACxDC,MAAc,EACdC,WAAwB;IAFA,mBAAc,GAAdF,cAAc;IACtC,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IANrB,SAAI,GAAyB,IAAI;IACjC,aAAQ,GAAyC,IAAIC,GAAG,EAAE;EAM/D;EAEJC,cAAc;IACZ,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAC,eAAe;IACb,IAAI,CAACJ,WAAW,CAACK,MAAM,EAAE,CACtBC,IAAI,CAACf,SAAS,CAAC,IAAI,CAACO,cAAc,CAAC,CAAC,CACpCS,SAAS,CAAC,MAAK;MACd,IAAI,CAACR,MAAM,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC;EACN;EAEA,IAAIK,UAAU;IACZ,OAAO,IAAI,CAACC,IAAI,IAAI,IAAI;EAC1B;CACD;AAxBUC,YAARrB,KAAK,EAAE,8CAAmC;AAClCqB,YAARrB,KAAK,EAAE,kDAA4D;AAFzDO,gBAAgB,eAlB5BT,SAAS,CAAC;EACTwB,QAAQ,EAAE,aAAa;EACvBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPvB,YAAY,EAEZE,gBAAgB,EAChBC,aAAa,EACbC,eAAe,CAChB;EACDoB,SAAS,EAAE,CACTnB,cAAc,CACf;EACDoB,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CACT,wBAAwB;CAE3B,CAAC,EAMGC,iBAAM,CAACtB,cAAc,CAAC,IALdC,gBAAgB,CAyB5B;SAzBYA,gBAAgB","names":["Component","Inject","Input","CommonModule","takeUntil","MatToolbarModule","MatIconModule","MatButtonModule","DestroyService","ToolbarComponent","constructor","viewDestroyed$","router","authService","Map","onLoginClicked","navigate","onLogoutClicked","logout","pipe","subscribe","isLoggedIn","user","__decorate","selector","standalone","imports","providers","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/layouts/components/toolbar/toolbar.component.ts"],"sourcesContent":["import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { takeUntil, Observable } from 'rxjs';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { AuthService, UserInterface } from '@features/users';\nimport { DestroyService } from '@core/services';\nimport { AccountInterface } from '@features/accounts';\n\n@Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  providers: [\n    DestroyService\n  ],\n  templateUrl: 'toolbar.component.html',\n  styleUrls: [\n    'toolbar.component.scss'\n  ]\n})\nexport class ToolbarComponent {\n  @Input() user: UserInterface | null = null;\n  @Input() accounts: Map<number, AccountInterface> | null = new Map();\n  \n  constructor(\n    @Inject(DestroyService) private readonly viewDestroyed$: Observable<void>,\n    private readonly router: Router,\n    private readonly authService: AuthService\n  ) { }\n\n  onLoginClicked() {\n    this.router.navigate(['login']);\n  }\n\n  onLogoutClicked() {\n    this.authService.logout()\n      .pipe(takeUntil(this.viewDestroyed$))\n      .subscribe(() => {\n        this.router.navigate(['']); \n      });\n  }\n\n  get isLoggedIn() {\n    return this.user != null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}