{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { DestroyService } from '@core/services';\nimport { Loadable } from '@core/helpers';\nimport { TransactionTypes } from '@features/transactions';\nlet DetailsComponent = class DetailsComponent {\n  constructor(viewDestroyed$, formBuilder, transactionsService, accountsState) {\n    this.viewDestroyed$ = viewDestroyed$;\n    this.formBuilder = formBuilder;\n    this.transactionsService = transactionsService;\n    this.accountsState = accountsState;\n    this.accounts = new Loadable([], false);\n    this.categories = new Loadable([], false);\n    this.formGroup = this.formBuilder.group({\n      amount: [null, Validators.required],\n      description: [null, [Validators.required, Validators.maxLength(500)]],\n      typeId: [TransactionTypes.expense, Validators.required],\n      categoryId: [null, [Validators.required]],\n      accountId: [null, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.formGroup.reset(this.expense);\n    this.updateAccounts();\n    this.updateCategories();\n  }\n  onSubmit(form) {\n    this.transactionsService.create();\n  }\n  onBikeSelected(event) {\n    const bike = event.option.value;\n    this.formGroup.patchValue({\n      bikeId: bike.id,\n      bikeName: bike.name,\n      bikeNumber: bike.number\n    });\n  }\n  onClearBikeNameClicked() {\n    this.formGroup.patchValue({\n      typeId: ''\n    });\n  }\n  updateAccounts() {}\n};\nDetailsComponent = __decorate([Component({\n  selector: 'app-details',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MatFormFieldModule],\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n}), __param(0, Inject(DestroyService))], DetailsComponent);\nexport { DetailsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAAiCC,WAAW,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAIrG,SAASC,kBAAkB,QAAQ,8BAA8B;AAEjE,SAASC,cAAc,QAAQ,gBAAgB;AAE/C,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAIEC,gBAAgB,QACX,wBAAwB;AAexB,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAa3BC,YAC2CC,cAAgC,EACxDC,WAAwB,EACxBC,mBAAwC,EACxCC,aAA8B;IAHN,mBAAc,GAAdH,cAAc;IACtC,gBAAW,GAAXC,WAAW;IACX,wBAAmB,GAAnBC,mBAAmB;IACnB,kBAAa,GAAbC,aAAa;IAhBhC,aAAQ,GAAG,IAAIP,QAAQ,CAAqB,EAAE,EAAE,KAAK,CAAC;IACtD,eAAU,GAAG,IAAIA,QAAQ,CAAiC,EAAE,EAAE,KAAK,CAAC;IAGpE,cAAS,GAAc,IAAI,CAACK,WAAW,CAACG,KAAK,CAAC;MAC5CC,MAAM,EAAE,CAAC,IAAI,EAAEZ,UAAU,CAACa,QAAQ,CAAC;MACnCC,WAAW,EAAE,CAAC,IAAI,EAAE,CAACd,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACe,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;MACrEC,MAAM,EAAE,CAACZ,gBAAgB,CAACa,OAAO,EAAEjB,UAAU,CAACa,QAAQ,CAAC;MACvDK,UAAU,EAAE,CAAC,IAAI,EAAE,CAAClB,UAAU,CAACa,QAAQ,CAAC,CAAC;MACzCM,SAAS,EAAE,CAAC,IAAI,EAAE,CAACnB,UAAU,CAACa,QAAQ,CAAC;KACxC,CAAC;EAOE;EAEJO,QAAQ;IACN,IAAI,CAACC,SAAS,CAACC,KAAK,CAAC,IAAI,CAACL,OAAO,CAAC;IAClC,IAAI,CAACM,cAAc,EAAE;IACrB,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAC,QAAQ,CAACC,IAAS;IAChB,IAAI,CAACjB,mBAAmB,CAACkB,MAAM,EAAE;EACnC;EAEAC,cAAc,CAACC,KAAmC;IAChD,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC/B,IAAI,CAACX,SAAS,CAACY,UAAU,CAAC;MACxBC,MAAM,EAAEJ,IAAI,CAACK,EAAE;MACfC,QAAQ,EAAEN,IAAI,CAACO,IAAI;MACnBC,UAAU,EAAER,IAAI,CAACS;KAClB,CAAC;EACJ;EAEAC,sBAAsB;IACpB,IAAI,CAACnB,SAAS,CAACY,UAAU,CAAC;MAAEjB,MAAM,EAAE;IAAE,CAAE,CAAC;EAC3C;EAEAO,cAAc,IAEd;CACD;AA9CYlB,gBAAgB,eAb5BV,SAAS,CAAC;EACT8C,QAAQ,EAAE,aAAa;EACvBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACP9C,YAAY,EACZC,WAAW,EACXC,mBAAmB,EAEnBE,kBAAkB,CACnB;EACD2C,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,EAeGC,iBAAM,CAAC5C,cAAc,CAAC,IAddG,gBAAgB,CA8C5B;SA9CYA,gBAAgB","names":["Component","Inject","CommonModule","FormsModule","ReactiveFormsModule","Validators","MatFormFieldModule","DestroyService","Loadable","TransactionTypes","DetailsComponent","constructor","viewDestroyed$","formBuilder","transactionsService","accountsState","group","amount","required","description","maxLength","typeId","expense","categoryId","accountId","ngOnInit","formGroup","reset","updateAccounts","updateCategories","onSubmit","form","create","onBikeSelected","event","bike","option","value","patchValue","bikeId","id","bikeName","name","bikeNumber","number","onClearBikeNameClicked","selector","standalone","imports","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/pages/expenses/details/details.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { DestroyService } from '@core/services';\nimport { AccountInterface } from '@features/accounts';\nimport { Loadable } from '@core/helpers';\nimport { \n  TransactionCategoryInterface, \n  TransactionReadInterface, \n  TransactionsService, \n  TransactionTypes \n} from '@features/transactions';\n\n@Component({\n  selector: 'app-details',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatFormFieldModule\n  ],\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent {\n  accounts = new Loadable<AccountInterface[]>([], false);\n  categories = new Loadable<TransactionCategoryInterface[]>([], false);\n  expense!: TransactionReadInterface;\n\n  formGroup: FormGroup = this.formBuilder.group({\n    amount: [null, Validators.required],\n    description: [null, [Validators.required, Validators.maxLength(500)]],\n    typeId: [TransactionTypes.expense, Validators.required],\n    categoryId: [null, [Validators.required]],\n    accountId: [null, [Validators.required]]\n  });\n\n  constructor(\n    @Inject(DestroyService) private readonly viewDestroyed$: Observable<void>,\n    private readonly formBuilder: FormBuilder,\n    private readonly transactionsService: TransactionsService,\n    private readonly accountsState: AccountsService\n  ) { }\n  \n  ngOnInit(): void {\n    this.formGroup.reset(this.expense);\n    this.updateAccounts();\n    this.updateCategories();\n  }\n\n  onSubmit(form: any) {\n    this.transactionsService.create();\n  }\n\n  onBikeSelected(event: MatAutocompleteSelectedEvent): void {\n    const bike = event.option.value;\n    this.formGroup.patchValue({\n      bikeId: bike.id,\n      bikeName: bike.name,\n      bikeNumber: bike.number\n    });\n  }\n\n  onClearBikeNameClicked(): void {\n    this.formGroup.patchValue({ typeId: '' });\n  }\n\n  updateAccounts(): void {\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}