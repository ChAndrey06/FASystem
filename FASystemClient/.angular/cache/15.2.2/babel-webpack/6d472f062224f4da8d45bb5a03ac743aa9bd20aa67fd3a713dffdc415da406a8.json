{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nfunction ToolbarComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r0.user.name, \" - \", ctx_r0.user == null ? null : ctx_r0.user.login, \" \");\n  }\n}\nfunction ToolbarComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ToolbarComponent_ng_container_9_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onLogoutClicked());\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"logout\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ToolbarComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ToolbarComponent_ng_container_10_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onLoginClicked());\n    });\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"login\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport class ToolbarComponent {\n  constructor(router) {\n    this.router = router;\n    this.user = null;\n  }\n  onLoginClicked() {\n    this.router.navigate(['login']);\n  }\n  onLogoutClicked() {\n    this.router.navigate(['']);\n  }\n  get isLoggedIn() {\n    return this.user != null;\n  }\n}\nToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n  return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nToolbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ToolbarComponent,\n  selectors: [[\"app-toolbar\"]],\n  inputs: {\n    user: \"user\"\n  },\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 11,\n  vars: 3,\n  consts: [[\"color\", \"primary\"], [\"mat-icon-button\", \"\"], [1, \"spaicer\"], [4, \"ngIf\"], [\"mat-icon-button\", \"\", 3, \"click\"]],\n  template: function ToolbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\")(1, \"mat-toolbar\", 0)(2, \"button\", 1)(3, \"mat-icon\");\n      i0.ɵɵtext(4, \"menu\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"span\");\n      i0.ɵɵtext(6, \"FASystem\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"span\", 2);\n      i0.ɵɵtemplate(8, ToolbarComponent_ng_container_8_Template, 2, 2, \"ng-container\", 3);\n      i0.ɵɵtemplate(9, ToolbarComponent_ng_container_9_Template, 4, 0, \"ng-container\", 3);\n      i0.ɵɵtemplate(10, ToolbarComponent_ng_container_10_Template, 6, 0, \"ng-container\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n    }\n  },\n  dependencies: [CommonModule, i2.NgIf, MatToolbarModule, i3.MatToolbar, MatIconModule, i4.MatIcon, MatButtonModule, i5.MatIconButton],\n  styles: [\".spaicer[_ngcontent-%COMP%] {\\n  flex: 1 1 auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGF5b3V0cy9jb21wb25lbnRzL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5zcGFpY2VyIHtcbiAgZmxleDogMSAxIGF1dG87XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAG9C,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;;;;;;;;;ICetDC,6BAA2B;IACzBA,YACF;IAAAA,0BAAe;;;;IADbA,eACF;IADEA,wGACF;;;;;;IACAA,6BAAiC;IAC/BA,iCAAoD;IAA5CA;MAAAA;MAAA;MAAA,OAASA,uCAAiB;IAAA,EAAC;IACjCA,gCAAU;IAAAA,sBAAM;IAAAA,iBAAW;IAE/BA,0BAAe;;;;;;IACfA,6BAAkC;IAChCA,4BAAM;IAAAA,qBAAK;IAAAA,iBAAO;IAClBA,iCAAmD;IAA3CA;MAAAA;MAAA;MAAA,OAASA,sCAAgB;IAAA,EAAC;IAChCA,gCAAU;IAAAA,qBAAK;IAAAA,iBAAW;IAE9BA,0BAAe;;;ADTnB,OAAM,MAAOC,gBAAgB;EAG3BC,YACmBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAHhB,SAAI,GAAyB,IAAI;EAItC;EAEJC,cAAc;IACZ,IAAI,CAACD,MAAM,CAACE,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EAEjC;EAEAC,eAAe;IACb,IAAI,CAACH,MAAM,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EAEA,IAAIE,UAAU;IACZ,OAAO,IAAI,CAACC,IAAI,IAAI,IAAI;EAC1B;;AAlBWP,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAQ;EAAAC;IAAAF;EAAA;EAAAG;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCzB7BhB,yBAAG;MAiBaA,oBAAI;MAAAA,iBAAW;MAE3BA,4BAAM;MAAAA,wBAAQ;MAAAA,iBAAO;MACrBA,0BAA6B;MAC7BA,mFAEe;MACfA,mFAIe;MACfA,qFAKe;MACjBA,iBAAc;;;MAdGA,eAAU;MAAVA,+BAAU;MAGVA,eAAgB;MAAhBA,qCAAgB;MAKhBA,eAAiB;MAAjBA,sCAAiB;;;iBDfhCJ,YAAY,WAEZC,gBAAgB,iBAChBC,aAAa,cACbC,eAAe;EAAAkB;AAAA","names":["CommonModule","MatToolbarModule","MatIconModule","MatButtonModule","i0","ToolbarComponent","constructor","router","onLoginClicked","navigate","onLogoutClicked","isLoggedIn","user","selectors","inputs","standalone","features","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/layouts/components/toolbar/toolbar.component.ts","/home/eagold/MyFiles/FASystem/FASystemClient/src/app/layouts/components/toolbar/toolbar.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { UserInterface } from '@features/users';\n\n@Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  templateUrl: 'toolbar.component.html',\n  styleUrls: [\n    'toolbar.component.scss'\n  ]\n})\nexport class ToolbarComponent {\n  @Input() user: UserInterface | null = null;\n\n  constructor(\n    private readonly router: Router\n  ) { }\n\n  onLoginClicked() {\n    this.router.navigate(['login']);\n\n  }\n\n  onLogoutClicked() {\n    this.router.navigate(['']);\n  }\n\n  get isLoggedIn() {\n    return this.user != null;\n  }\n}\n","<p>\n  <!-- <mat-toolbar color=\"primary\" style=\"display: flex; justify-content: space-between;\">\n    <div>\n      <button mat-icon-button (click)=\"onMenuClicked()\">\n        <mat-icon>menu</mat-icon>\n      </button>        \n      <button mat-icon-button (click)=\"onCloseClicked()\">\n        <mat-icon>close</mat-icon>\n      </button>\n      <span>FASystem</span>\n    </div>\n    <div *ngIf=\"(userData$ | async) as userData\">\n      {{userData.name}} - {{userData.login}}\n    </div>\n  </mat-toolbar> -->\n  <mat-toolbar color=\"primary\">\n    <button mat-icon-button>\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>FASystem</span>\n    <span class=\"spaicer\"></span>\n    <ng-container *ngIf=\"user\">\n      {{user.name}} - {{user?.login}}\n    </ng-container>\n    <ng-container *ngIf=\"isLoggedIn\">\n      <button (click)=\"onLogoutClicked()\" mat-icon-button>\n        <mat-icon>logout</mat-icon>\n      </button>\n    </ng-container>    \n    <ng-container *ngIf=\"!isLoggedIn\">\n      <span>Login</span>\n      <button (click)=\"onLoginClicked()\" mat-icon-button>\n        <mat-icon>login</mat-icon>\n      </button>\n    </ng-container>\n  </mat-toolbar>\n</p>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}