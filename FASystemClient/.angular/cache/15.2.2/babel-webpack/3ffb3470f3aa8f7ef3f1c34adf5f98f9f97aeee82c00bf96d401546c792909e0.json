{"ast":null,"code":"import { environment } from '@environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  get hostUrl() {\n    return environment.apiUrl;\n  }\n  constructor(httpService) {\n    this.httpService = httpService;\n  }\n  get(subUrl, options) {\n    const url = this.getFullUrl(subUrl);\n    return this.httpService.get(url, options);\n  }\n  post(subUrl, data) {\n    const url = this.getFullUrl(subUrl);\n    return this.httpService.post(url, data);\n  }\n  put(subUrl, data) {\n    const url = this.getFullUrl(subUrl);\n    return this.httpService.put(url, data);\n  }\n  delete(subUrl) {\n    const url = this.getFullUrl(subUrl);\n    return this.httpService.delete(url);\n  }\n  getFullUrl(subUrl) {\n    return `${this.hostUrl}${subUrl}`;\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAASA,WAAW,QAAQ,2BAA2B;;;AAiBvD,OAAM,MAAOC,UAAU;EACrB,IAAWC,OAAO;IAChB,OAAOF,WAAW,CAACG,MAAM;EAC3B;EAEAC,YACmBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;EAC1B;EAEGC,GAAG,CAAIC,MAAc,EAAEC,OAA8B;IAC1D,MAAMC,GAAG,GAAG,IAAI,CAACC,UAAU,CAACH,MAAM,CAAC;IACnC,OAAO,IAAI,CAACF,WAAW,CAACC,GAAG,CAAIG,GAAG,EAAED,OAAO,CAAC;EAC9C;EAEOG,IAAI,CAAIJ,MAAc,EAAEK,IAAa;IAC1C,MAAMH,GAAG,GAAG,IAAI,CAACC,UAAU,CAACH,MAAM,CAAC;IAEnC,OAAO,IAAI,CAACF,WAAW,CAACM,IAAI,CAAIF,GAAG,EAAEG,IAAI,CAAC;EAC5C;EAEOC,GAAG,CAAIN,MAAc,EAAEK,IAAa;IACzC,MAAMH,GAAG,GAAG,IAAI,CAACC,UAAU,CAACH,MAAM,CAAC;IAEnC,OAAO,IAAI,CAACF,WAAW,CAACQ,GAAG,CAAIJ,GAAG,EAAEG,IAAI,CAAC;EAC3C;EAEOE,MAAM,CAAIP,MAAc;IAC7B,MAAME,GAAG,GAAG,IAAI,CAACC,UAAU,CAACH,MAAM,CAAC;IAEnC,OAAO,IAAI,CAACF,WAAW,CAACS,MAAM,CAAIL,GAAG,CAAC;EACxC;EAEQC,UAAU,CAACH,MAAc;IAC/B,OAAO,GAAG,IAAI,CAACL,OAAO,GAAGK,MAAM,EAAE;EACnC;;AAlCWN,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAc,SAAVd,UAAU;EAAAe,YAFT;AAAM","names":["environment","ApiService","hostUrl","apiUrl","constructor","httpService","get","subUrl","options","url","getFullUrl","post","data","put","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/core/services/api.service.ts"],"sourcesContent":["import { HttpClient, HttpContext, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '@environments/environment';\r\n\r\ninterface HttpClientGetOptions {\r\n  headers?: HttpHeaders | {\r\n    [header: string]: string | string[];\r\n  } | undefined;\r\n  context?: HttpContext | undefined;\r\n  observe?: \"body\" | undefined;\r\n  params?: HttpParams;\r\n  reportProgress?: boolean | undefined;\r\n  responseType?: \"json\" | undefined;\r\n  withCredentials?: boolean | undefined;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  public get hostUrl(): string {\r\n    return environment.apiUrl;\r\n  }\r\n\r\n  constructor(\r\n    private readonly httpService: HttpClient\r\n  ) { }\r\n\r\n  public get<T>(subUrl: string, options?: HttpClientGetOptions): Observable<T> {\r\n    const url = this.getFullUrl(subUrl);\r\n    return this.httpService.get<T>(url, options);\r\n  }\r\n\r\n  public post<T>(subUrl: string, data: unknown): Observable<T> {\r\n    const url = this.getFullUrl(subUrl);\r\n\r\n    return this.httpService.post<T>(url, data);\r\n  }\r\n\r\n  public put<T>(subUrl: string, data: unknown): Observable<T> {\r\n    const url = this.getFullUrl(subUrl);\r\n\r\n    return this.httpService.put<T>(url, data);\r\n  }\r\n\r\n  public delete<T>(subUrl: string): Observable<T> {\r\n    const url = this.getFullUrl(subUrl);\r\n\r\n    return this.httpService.delete<T>(url);\r\n  }\r\n\r\n  private getFullUrl(subUrl: string): string {\r\n    return `${this.hostUrl}${subUrl}`;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}