{"ast":null,"code":"var _class;\nimport { __decorate, __param } from \"tslib\";\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { takeUntil } from 'rxjs';\nimport { ToolbarComponent } from '../components';\nimport { DestroyService } from '@core/services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"rxjs\";\nimport * as i2 from \"@features/users\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nlet MainLayoutComponent = (_class = class MainLayoutComponent {\n  constructor(viewDestroyed$, userState, authService) {\n    this.viewDestroyed$ = viewDestroyed$;\n    this.userState = userState;\n    this.authService = authService;\n    this.userData$ = this.userState.data$;\n  }\n  ngOnInit() {\n    this.authService.update().pipe(takeUntil(this.viewDestroyed$)).subscribe();\n  }\n}, _class.ɵfac = function MainLayoutComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Observable), i0.ɵɵdirectiveInject(i2.UserState), i0.ɵɵdirectiveInject(i2.AuthService));\n}, _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-main-layout\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 3,\n  vars: 3,\n  consts: [[3, \"user\"]],\n  template: function MainLayoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-toolbar\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵelement(2, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"user\", i0.ɵɵpipeBind1(1, 1, ctx.userData$));\n    }\n  },\n  dependencies: [CommonModule, i3.AsyncPipe, RouterModule, i4.RouterOutlet, ToolbarComponent],\n  encapsulation: 2\n}), _class);\nMainLayoutComponent = __decorate([__param(0, Inject(DestroyService))], MainLayoutComponent);\nexport { MainLayoutComponent };","map":{"version":3,"mappings":";;AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,SAAS,QAAQ,MAAM;AAEhC,SAASC,gBAAgB,QAAQ,eAAe;AAEhD,SAASC,cAAc,QAAQ,gBAAgB;;;;;;AAmBxC,IAAMC,mBAAmB,aAAzB,MAAMA,mBAAmB;EAG9BC,YAC2CC,cAAgC,EACxDC,SAAoB,EACpBC,WAAwB;IAFA,mBAAc,GAAdF,cAAc;IACtC,cAAS,GAATC,SAAS;IACT,gBAAW,GAAXC,WAAW;IAL9B,cAAS,GAAG,IAAI,CAACD,SAAS,CAACE,KAAK;EAM5B;EAEJC,QAAQ;IACN,IAAI,CAACF,WAAW,CAACG,MAAM,EAAE,CACtBC,IAAI,CAACX,SAAS,CAAC,IAAI,CAACK,cAAc,CAAC,CAAC,CACpCO,SAAS,EAAE;EAChB;;mBAbWT,MAAmB;AAAA;QAAnBA,MAAmB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAN5BC,iCAAsD;;MACtDA,gCAA+B;;;MADlBA,0DAA0B;;;iBANvCtB,YAAY,gBACZC,YAAY,mBAEZE,gBAAgB;EAAAoB;AAAA;AASPlB,mBAAmB,eAI3BmB,iBAAM,CAACpB,cAAc,CAAC,IAJdC,mBAAmB,CAc/B;SAdYA,mBAAmB","names":["CommonModule","RouterModule","takeUntil","ToolbarComponent","DestroyService","MainLayoutComponent","constructor","viewDestroyed$","userState","authService","data$","ngOnInit","update","pipe","subscribe","selectors","standalone","features","decls","vars","consts","template","i0","encapsulation","__param"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/layouts/main-layout/main-layout.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { takeUntil } from 'rxjs';\n\nimport { ToolbarComponent } from '../components';\nimport { AuthService, UserState } from '@features/users';\nimport { DestroyService } from '@core/services';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-main-layout',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n\n    ToolbarComponent\n  ],\n  template: `\n    <app-toolbar [user]=\"userData$ | async\"></app-toolbar>\n    <router-outlet></router-outlet>\n  `,\n  styles: [\n  ]\n})\nexport class MainLayoutComponent implements OnInit{\n  userData$ = this.userState.data$;\n\n  constructor(\n    @Inject(DestroyService) private readonly viewDestroyed$: Observable<void>,\n    private readonly userState: UserState,\n    private readonly authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.update()\n      .pipe(takeUntil(this.viewDestroyed$))\n      .subscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}