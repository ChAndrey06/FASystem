{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@features/users\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nfunction ToolbarComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const userData_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", userData_r1.name, \" - \", userData_r1.email, \" \");\n  }\n}\nexport class ToolbarComponent {\n  constructor(userState) {\n    this.userState = userState;\n    this.userData$ = this.userState.data$;\n  }\n}\nToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n  return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(i1.UserState));\n};\nToolbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ToolbarComponent,\n  selectors: [[\"app-toolbar\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 9,\n  vars: 3,\n  consts: [[\"color\", \"primary\"], [\"mat-icon-button\", \"\", 1, \"example-icon\"], [4, \"ngIf\"]],\n  template: function ToolbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\")(1, \"mat-toolbar\", 0)(2, \"button\", 1)(3, \"mat-icon\");\n      i0.ɵɵtext(4, \"menu\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"span\");\n      i0.ɵɵtext(6, \"FASystem\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, ToolbarComponent_div_7_Template, 2, 2, \"div\", 2);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(8, 1, ctx.userData$));\n    }\n  },\n  dependencies: [CommonModule, i2.NgIf, i2.AsyncPipe, MatToolbarModule, i3.MatToolbar, MatIconModule, i4.MatIcon, MatButtonModule, i5.MatIconButton],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;;;;;;;;;IAqBlDC,2BAA6C;IAC3CA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,2EACF;;;AAOR,OAAM,MAAOC,gBAAgB;EAG3BC,YACmBC,SAAoB;IAApB,cAAS,GAATA,SAAS;IAHZ,cAAS,GAAG,IAAI,CAACA,SAAS,CAACC,KAAK;EAI7C;;AALQH,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAI;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAfzBX,yBAAG;MAGaA,oBAAI;MAAAA,iBAAW;MAE3BA,4BAAM;MAAAA,wBAAQ;MAAAA,iBAAO;MACrBA,iEAEM;;MACRA,iBAAc;;;MAHNA,eAA0B;MAA1BA,0DAA0B;;;iBAbpCJ,YAAY,yBAEZC,gBAAgB,iBAChBC,aAAa,cACbC,eAAe;EAAAa;AAAA","names":["CommonModule","MatToolbarModule","MatIconModule","MatButtonModule","i0","ToolbarComponent","constructor","userState","data$","selectors","standalone","features","decls","vars","consts","template","encapsulation"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/layouts/components/toolbar/toolbar.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { UserState } from '@features/users';\n\n@Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  template: `\n    <p>\n      <mat-toolbar color=\"primary\">\n        <button mat-icon-button class=\"example-icon\">\n          <mat-icon>menu</mat-icon>\n        </button>\n        <span>FASystem</span>\n        <div *ngIf=\"(userData$ | async) as userData\">\n          {{userData.name}} - {{userData.email}}\n        </div>\n      </mat-toolbar>\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ToolbarComponent {\n  public readonly userData$ = this.userState.data$;\n\n  constructor(\n    private readonly userState: UserState\n  ) {}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}