{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { takeUntil } from 'rxjs';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DestroyService } from '@core/services';\nimport { Loadable } from '@core/helpers';\nimport { TransactionTypesEnum } from '@features/transactions';\nlet DetailsComponent = class DetailsComponent {\n  constructor(viewDestroyed$, formBuilder, transactionsService, accountsState, accountsService, router) {\n    this.viewDestroyed$ = viewDestroyed$;\n    this.formBuilder = formBuilder;\n    this.transactionsService = transactionsService;\n    this.accountsState = accountsState;\n    this.accountsService = accountsService;\n    this.router = router;\n    this.accounts$ = this.accountsState.data$;\n    this.categories = new Loadable([], false);\n    this.formGroup = this.formBuilder.group({\n      amount: [null, Validators.required],\n      description: [null, [Validators.required, Validators.maxLength(500)]],\n      typeId: [TransactionTypesEnum.expense, Validators.required],\n      categoryId: [null, [Validators.required]],\n      accountId: [null, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    // this.formGroup.reset(this.expense);\n    this.updateCategories();\n  }\n  onSubmit(form) {\n    console.log(form);\n    this.transactionsService.create(form).pipe(takeUntil(this.viewDestroyed$)).subscribe(() => {});\n  }\n  updateCategories() {\n    this.categories.isLoading = true;\n    this.transactionsService.getCategories(TransactionTypesEnum.expense).pipe(takeUntil(this.viewDestroyed$)).subscribe({\n      next: data => this.categories.setData(data),\n      error: error => this.categories.setError(error)\n    });\n  }\n};\nDetailsComponent = __decorate([Component({\n  selector: 'app-details',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MatFormFieldModule, MatSelectModule, MatInputModule, MatButtonModule],\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n}), __param(0, Inject(DestroyService))], DetailsComponent);\nexport { DetailsComponent };","map":{"version":3,"mappings":"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","names":["Component","Inject","CommonModule","FormsModule","ReactiveFormsModule","Validators","takeUntil","MatFormFieldModule","MatSelectModule","MatInputModule","MatButtonModule","DestroyService","Loadable","TransactionTypesEnum","DetailsComponent","constructor","viewDestroyed$","formBuilder","transactionsService","accountsState","accountsService","router","data$","group","amount","required","description","maxLength","typeId","expense","categoryId","accountId","ngOnInit","updateCategories","onSubmit","form","console","log","create","pipe","subscribe","categories","isLoading","getCategories","next","data","setData","error","setError","selector","standalone","imports","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["/home/eagold/MyFiles/FASystem/FASystemClient/src/app/pages/expenses/details/details.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\n\nimport { Observable, takeUntil } from 'rxjs';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { DestroyService } from '@core/services';\nimport { AccountInterface, AccountsState, AccountsService } from '@features/accounts';\nimport { Loadable } from '@core/helpers';\nimport {\n  TransactionCategoryInterface,\n  TransactionReadInterface,\n  TransactionsService,\n  TransactionTypesEnum\n} from '@features/transactions';\n\n@Component({\n  selector: 'app-details',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule\n  ],\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent {\n  accounts$ = this.accountsState.data$;\n  categories = new Loadable<TransactionCategoryInterface[]>([], false);\n  expense!: TransactionReadInterface;\n\n  formGroup: FormGroup = this.formBuilder.group({\n    amount: [null, Validators.required],\n    description: [null, [Validators.required, Validators.maxLength(500)]],\n    typeId: [TransactionTypesEnum.expense, Validators.required],\n    categoryId: [null, [Validators.required]],\n    accountId: [null, [Validators.required]]\n  });\n\n  constructor(\n    @Inject(DestroyService) private readonly viewDestroyed$: Observable<void>,\n    private readonly formBuilder: FormBuilder,\n    private readonly transactionsService: TransactionsService,\n    private readonly accountsState: AccountsState,\n    private readonly accountsService: AccountsService,\n    private readonly router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    // this.formGroup.reset(this.expense);\n    this.updateCategories();\n  }\n\n  onSubmit(form: any) {\n    console.log(form);\n    this.transactionsService.create(form)\n      .pipe(takeUntil(this.viewDestroyed$))\n      .subscribe(() => {\n        \n      });\n  }\n\n  updateCategories(): void {\n    this.categories.isLoading = true;\n    this.transactionsService.getCategories(TransactionTypesEnum.expense)\n      .pipe(takeUntil(this.viewDestroyed$))\n      .subscribe({\n        next: data => this.categories.setData(data),\n        error: error => this.categories.setError(error)\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}